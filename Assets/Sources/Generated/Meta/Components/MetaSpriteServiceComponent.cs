//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity spriteServiceEntity { get { return GetGroup(MetaMatcher.SpriteService).GetSingleEntity(); } }
    public SpriteServiceComponent spriteService { get { return spriteServiceEntity.spriteService; } }
    public bool hasSpriteService { get { return spriteServiceEntity != null; } }

    public MetaEntity SetSpriteService(ISpritesService newInstance) {
        if (hasSpriteService) {
            throw new Entitas.EntitasException("Could not set SpriteService!\n" + this + " already has an entity with SpriteServiceComponent!",
                "You should check if the context already has a spriteServiceEntity before setting it or use context.ReplaceSpriteService().");
        }
        var entity = CreateEntity();
        entity.AddSpriteService(newInstance);
        return entity;
    }

    public void ReplaceSpriteService(ISpritesService newInstance) {
        var entity = spriteServiceEntity;
        if (entity == null) {
            entity = SetSpriteService(newInstance);
        } else {
            entity.ReplaceSpriteService(newInstance);
        }
    }

    public void RemoveSpriteService() {
        spriteServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public SpriteServiceComponent spriteService { get { return (SpriteServiceComponent)GetComponent(MetaComponentsLookup.SpriteService); } }
    public bool hasSpriteService { get { return HasComponent(MetaComponentsLookup.SpriteService); } }

    public void AddSpriteService(ISpritesService newInstance) {
        var index = MetaComponentsLookup.SpriteService;
        var component = CreateComponent<SpriteServiceComponent>(index);
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceSpriteService(ISpritesService newInstance) {
        var index = MetaComponentsLookup.SpriteService;
        var component = CreateComponent<SpriteServiceComponent>(index);
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveSpriteService() {
        RemoveComponent(MetaComponentsLookup.SpriteService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherSpriteService;

    public static Entitas.IMatcher<MetaEntity> SpriteService {
        get {
            if (_matcherSpriteService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.SpriteService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherSpriteService = matcher;
            }

            return _matcherSpriteService;
        }
    }
}
