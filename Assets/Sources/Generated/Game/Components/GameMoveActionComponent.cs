//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MoveActionComponent moveAction { get { return (MoveActionComponent)GetComponent(GameComponentsLookup.MoveAction); } }
    public bool hasMoveAction { get { return HasComponent(GameComponentsLookup.MoveAction); } }

    public void AddMoveAction(GameBoardElementPosition newTargetPosition) {
        var index = GameComponentsLookup.MoveAction;
        var component = CreateComponent<MoveActionComponent>(index);
        component.targetPosition = newTargetPosition;
        AddComponent(index, component);
    }

    public void ReplaceMoveAction(GameBoardElementPosition newTargetPosition) {
        var index = GameComponentsLookup.MoveAction;
        var component = CreateComponent<MoveActionComponent>(index);
        component.targetPosition = newTargetPosition;
        ReplaceComponent(index, component);
    }

    public void RemoveMoveAction() {
        RemoveComponent(GameComponentsLookup.MoveAction);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMoveAction;

    public static Entitas.IMatcher<GameEntity> MoveAction {
        get {
            if (_matcherMoveAction == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveAction);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMoveAction = matcher;
            }

            return _matcherMoveAction;
        }
    }
}
