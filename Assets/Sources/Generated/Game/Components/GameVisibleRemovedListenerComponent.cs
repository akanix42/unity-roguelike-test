//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public VisibleRemovedListenerComponent visibleRemovedListener { get { return (VisibleRemovedListenerComponent)GetComponent(GameComponentsLookup.VisibleRemovedListener); } }
    public bool hasVisibleRemovedListener { get { return HasComponent(GameComponentsLookup.VisibleRemovedListener); } }

    public void AddVisibleRemovedListener(System.Collections.Generic.List<IVisibleRemovedListener> newValue) {
        var index = GameComponentsLookup.VisibleRemovedListener;
        var component = CreateComponent<VisibleRemovedListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceVisibleRemovedListener(System.Collections.Generic.List<IVisibleRemovedListener> newValue) {
        var index = GameComponentsLookup.VisibleRemovedListener;
        var component = CreateComponent<VisibleRemovedListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveVisibleRemovedListener() {
        RemoveComponent(GameComponentsLookup.VisibleRemovedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherVisibleRemovedListener;

    public static Entitas.IMatcher<GameEntity> VisibleRemovedListener {
        get {
            if (_matcherVisibleRemovedListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.VisibleRemovedListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherVisibleRemovedListener = matcher;
            }

            return _matcherVisibleRemovedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddVisibleRemovedListener(IVisibleRemovedListener value) {
        var listeners = hasVisibleRemovedListener
            ? visibleRemovedListener.value
            : new System.Collections.Generic.List<IVisibleRemovedListener>();
        listeners.Add(value);
        ReplaceVisibleRemovedListener(listeners);
    }

    public void RemoveVisibleRemovedListener(IVisibleRemovedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = visibleRemovedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveVisibleRemovedListener();
        } else {
            ReplaceVisibleRemovedListener(listeners);
        }
    }
}
