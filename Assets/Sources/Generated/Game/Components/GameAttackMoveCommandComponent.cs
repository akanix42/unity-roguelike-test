//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AttackMoveCommand attackMoveCommand { get { return (AttackMoveCommand)GetComponent(GameComponentsLookup.AttackMoveCommand); } }
    public bool hasAttackMoveCommand { get { return HasComponent(GameComponentsLookup.AttackMoveCommand); } }

    public void AddAttackMoveCommand(IntVector2 newDirection) {
        var index = GameComponentsLookup.AttackMoveCommand;
        var component = CreateComponent<AttackMoveCommand>(index);
        component.direction = newDirection;
        AddComponent(index, component);
    }

    public void ReplaceAttackMoveCommand(IntVector2 newDirection) {
        var index = GameComponentsLookup.AttackMoveCommand;
        var component = CreateComponent<AttackMoveCommand>(index);
        component.direction = newDirection;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackMoveCommand() {
        RemoveComponent(GameComponentsLookup.AttackMoveCommand);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAttackMoveCommand;

    public static Entitas.IMatcher<GameEntity> AttackMoveCommand {
        get {
            if (_matcherAttackMoveCommand == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AttackMoveCommand);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAttackMoveCommand = matcher;
            }

            return _matcherAttackMoveCommand;
        }
    }
}
